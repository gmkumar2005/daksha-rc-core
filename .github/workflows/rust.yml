name: Rust CI

on:
  pull_request:
    branches: [ main, 53_caching ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check and lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.86.0
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - name: Check code
        run: |
          cargo check --all-targets
          cargo fmt --check
          cargo clippy -- -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.86.0
      - uses: Swatinem/rust-cache@v2
      - name: Run unit tests
        run: cargo test --release
      - name: Run integration tests
        run: cargo test --release --features integration_tests
        continue-on-error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.86.0
      - uses: Swatinem/rust-cache@v2
      - name: Build release
        run: cargo build --release

  notify:
    name: Success Notification
    runs-on: ubuntu-latest
    needs: [check, test, build]
    if: success()
    steps:
      - uses: dtolnay/rust-toolchain@1.86.0
      - name: Get Rust version
        id: rust-version
        run: |
          rustc --version > rust_version.txt
          echo "version=$(cat rust_version.txt)" >> $GITHUB_OUTPUT
        shell: bash
      - name: Success Summary
        run: |
          echo "## âœ… CI Pipeline Completed Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“‹ Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **PR**: #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.head_ref }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Author**: ${{ github.event.pull_request.user.login }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Rust Version**: ${{ steps.rust-version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### âœ… Completed Jobs" >> $GITHUB_STEP_SUMMARY
          echo "- **Check & Lint**: Code formatting, clippy warnings, and compilation checks passed" >> $GITHUB_STEP_SUMMARY
          echo "- **Tests**: Unit tests completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "- **Build**: Release build completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸš€ Ready for Review" >> $GITHUB_STEP_SUMMARY
          echo "All CI checks have passed. This PR is ready for code review and potential merge." >> $GITHUB_STEP_SUMMARY