name: Single Job Multi-Platform Build & Push (Two Commands)

on:
  push:
    branches:
      - main
      - 53_caching
  pull_request:
    branches:
      - main
      - 53_caching
  workflow_dispatch: # Allows manually triggering the workflow
    inputs:
      version:
        description: 'Version tag for the Docker image (e.g., 1.0.0, v2.1.3)'
        required: true
        type: string
        default: 'latest'

env:
  IMAGE_REPO: ghcr.io/daksha-rc/rc-web # Your image repository prefix

jobs:
  build-and-push-multi-platform:
    runs-on: ubuntu-latest # Single Linux runner for both architectures

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get current Git tag
        id: get_git_tag
        run: |
          # Get the current git tag
          GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || echo "")
          echo "GIT_TAG=$GIT_TAG" >> $GITHUB_OUTPUT # Make GIT_TAG available to subsequent steps

      - name: Set up QEMU for multi-platform builds
        # This is essential to enable building ARM64 on an x86_64 Linux runner
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        # This configures BuildKit, which nerdctl leverages for multi-platform builds.
        # It integrates with the QEMU setup.
        uses: docker/setup-buildx-action@v3

      - name: Install containerd and nerdctl
        run: |
          sudo apt-get update
          sudo apt-get install -y containerd.io

          NERDCTL_VERSION="1.7.0" # Check https://github.com/containerd/nerdctl/releases for latest
          HOST_ARCH=$(dpkg --print-architecture) # Detect runner architecture (should be amd64)
          wget https://github.com/containerd/nerdctl/releases/download/v${NERDCTL_VERSION}/nerdctl-${NERDCTL_VERSION}-linux-${HOST_ARCH}.tar.gz
          sudo tar -C /usr/local/bin -xzf nerdctl-${NERDCTL_VERSION}-linux-${HOST_ARCH}.tar.gz

          containerd --version
          nerdctl --version

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Multi-Platform Docker Image
        run: |
          GIT_TAG="${{ steps.get_git_tag.outputs.GIT_TAG }}"
          BUILD_COMMAND="nerdctl build --platform=linux/amd64,linux/arm64"
          
          # Always add the latest tag
          BUILD_COMMAND+=" -t ${{ env.IMAGE_REPO }}:latest"

          # Add git tag if available
          if [ -n "$GIT_TAG" ]; then
              echo "Git tag found: $GIT_TAG. Adding tag to build command."
              BUILD_COMMAND+=" -t ${{ env.IMAGE_REPO }}:$GIT_TAG"
          else
              echo "No git tag found."
          fi

          # Add Dockerfile path and build context
          BUILD_COMMAND+=" -f rc-web/Dockerfile ." # Make sure your Dockerfile path is correct

          echo "Executing build command:"
          echo "$BUILD_COMMAND"
          eval "$BUILD_COMMAND" # Use eval to execute the dynamically built command string

      - name: Push Multi-Platform Docker Image
        # This step will push the manifest list and the underlying images.
        # This will only run on 'push' to 'main' branch, or if GIT_TAG exists,
        # otherwise only `latest` is pushed.
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' || steps.get_git_tag.outputs.GIT_TAG != ''

        run: |
          GIT_TAG="${{ steps.get_git_tag.outputs.GIT_TAG }}"

          # Always push the latest tag
          echo "Pushing latest multi-platform image: ${{ env.IMAGE_REPO }}:latest"
          nerdctl push --all-platforms ${{ env.IMAGE_REPO }}:latest

          # Conditionally push the git tag
          if [ -n "$GIT_TAG" ]; then
              echo "Pushing multi-platform image with Git tag: ${{ env.IMAGE_REPO }}:$GIT_TAG"
              nerdctl push --all-platforms ${{ env.IMAGE_REPO }}:$GIT_TAG
          else
              echo "No Git tag to push."
          fi